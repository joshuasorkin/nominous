doctype html
html
  head
    title= title
    link(rel='stylesheet', href='/stylesheets/style.css')
    script(src="https://cdnjs.cloudflare.com/ajax/libs/tone/14.8.32/Tone.js")
    
  body
    button(type = 'button' id = 'play-button' onclick = 'toneStart()') Click to play the song of your name and birth year!
    p I recommend lowering your volume before pressing the button.
    script(type="text/javascript").
        var noteTime;
        var playNote = function(synthobj,toneObj){
            let note = toneObj.note;
            let duration = toneObj.duration;
            console.log(`${note} ${duration} ${noteTime}`)
            //play the note, duration, and harmonicity specified by this sequence element
            synthobj.harmonicity.value = 2-parseFloat(`0.${duration}`);
            synthobj.triggerAttackRelease(`${note}`, `0.${duration}`,noteTime);
            //update current time
            noteTime=noteTime+parseFloat(`0.${duration}`);
        }

        //parse tone sequence from stringified JSON
        let toneSequence = !{toneSequence}

        var toneStart = async function(){
            //stop functionality doesn't seem to work, but leaving this here as a placeholder
            if(Tone.Transport.state === "started"){
                console.log("stopping");
                Tone.Transport.stop();
            }
            else{
                //start Tone
                await Tone.Transport.start();
                console.log("audio ready");
                console.log(Tone.Transport.state)
                //get the initial time
                let noteTime=Tone.now();
                //initialize synthesizer
                const synthobj = new Tone.DuoSynth().toDestination();
                //loop through tone sequence
                for(let i=0;i<toneSequence.length;i=i+2){
                    for(let k=0;k<2;k++){
                        for(let j=0;j<4;j++){
                            if(i+j<toneSequence.length){
                                let toneObj = toneSequence[i+j];
                                console.log(`notetime: ${noteTime}`)
                                //playNote(synthobj,toneObj);
                                let note = toneObj.note;
                                let duration = toneObj.duration;
                                console.log(`${note} ${duration} ${noteTime}`)
                                //play the note, duration, and harmonicity specified by this sequence element
                                let durationFloat = parseFloat(`0.${duration}`)/2
                                synthobj.harmonicity.value = 2-durationFloat;
                                synthobj.triggerAttackRelease(`${note}`, `${durationFloat}`,noteTime);
                                //update current time
                                noteTime=noteTime+durationFloat;
                            }


                        }
                    }
                }
            }
        }